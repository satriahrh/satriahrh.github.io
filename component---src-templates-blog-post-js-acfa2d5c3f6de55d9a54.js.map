{"version":3,"file":"component---src-templates-blog-post-js-acfa2d5c3f6de55d9a54.js","mappings":"kIAqDMA,EAAQ,CACZC,EAAAA,cAACC,EAAAA,KAAD,CAAMC,GAAG,SAAT,QACAF,EAAAA,cAAAA,IAAAA,CAAGG,KAAK,+BAAR,gBAGF,IApD8C,SAAC,GAAD,EAAGC,MAAH,OAC5CJ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAK,oBAAeK,UAAU,gBAC5BL,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,mBACbL,EAAAA,cAAAA,IAAAA,CACEK,UAAU,+BACV,gCACA,iBAAe,iCACfC,MAAO,CACLC,WAAY,WAGhBP,EAAAA,cAACC,EAAAA,KAAD,CAAMI,UAAU,sCAAsCH,GAAG,KAAzD,cAIFF,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,oBACbL,EAAAA,cAAAA,KAAAA,CAAIK,UAAU,8BACbN,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACPV,EAAAA,cAAAA,KAAAA,CAAIW,GAAID,GACLD,OAIPT,EAAAA,cAACC,EAAAA,KAAD,CAAMI,UAAU,qCAAqCH,GAAG,KAAxD,eAMJF,EAAAA,cAAAA,MAAAA,CACEW,GAAG,wBACH,oBAAkB,6BAElBX,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,2CACbL,EAAAA,cAAAA,KAAAA,CAAIK,UAAU,6DACXN,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACTV,EAAAA,cAAAA,KAAAA,CAAIW,GAAID,GACLD,Y,sECoBf,UA1DyB,SAAC,GAAwB,IAAtBG,EAAqB,EAArBA,KACpBC,GADyC,EAAfC,SACnBF,EAAKG,gBACVC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KAElB,OACE,gCACE,gBAAC,IAAD,CACEb,MAAOS,EAAKK,YAAYd,MACxBe,YAAaN,EAAKK,YAAYC,aAAeN,EAAKO,UAEpD,gBAAC,IAAD,CACAhB,MAAM,SAEN,2BACAC,UAAU,eACRgB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYV,EAAKK,YAAYd,OAC1C,yBAAIS,EAAKK,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQb,EAAKc,MACxCJ,SAAS,gBAEX,4BAEF,2BACE,sBACEjB,MAAO,CACLsB,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGhB,GACC,gBAAC,EAAAf,KAAD,CAAMC,GAAIc,EAASiB,OAAOC,KAAMC,IAAI,QAApC,KACKnB,EAASE,YAAYd,QAI9B,0BACGa,GACC,gBAAC,EAAAhB,KAAD,CAAMC,GAAIe,EAAKgB,OAAOC,KAAMC,IAAI,QAC7BlB,EAAKC,YAAYd,MADpB","sources":["webpack://monocoque/./src/components/Navigation.tsx","webpack://monocoque/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\ntype NavigationProps = {\n  title?: string\n}\nconst Navigation: React.FC<NavigationProps> = ({ title }) => (\n  <>\n    <nav data-uk-navbar className=\"uk-container\">\n      <div className=\"uk-navbar-left \">\n        <a\n          className=\"uk-navbar-toggle uk-hidden@s\"\n          data-uk-navbar-toggle-icon\n          data-uk-toggle=\"target: #offcanvas-nav-primary\"\n          style={{\n            marginLeft: \"-15px\",\n          }}\n        ></a>\n        <Link className=\"uk-navbar-item uk-logo uk-visible@s\" to=\"/\">\n          satriahrh\n        </Link>\n      </div>\n      <div className=\"uk-navbar-right \">\n        <ul className=\"uk-navbar-nav uk-visible@s\">\n        {menus.map((menu, index) => (\n            <li id={index}>\n              {menu}\n            </li>\n          ))}\n        </ul>\n        <Link className=\"uk-navbar-item uk-logo uk-hidden@s\" to=\"/\">\n          satriahrh\n        </Link>\n      </div>\n    </nav>\n\n    <div\n      id=\"offcanvas-nav-primary\"\n      data-uk-offcanvas=\"mode: push; overlay: true\"\n    >\n      <div className=\"uk-offcanvas-bar uk-flex uk-flex-column\">\n        <ul className=\"uk-nav uk-nav-primary uk-nav-left uk-margin-auto-vertical\">\n          {menus.map((menu, index) => (\n            <li id={index}>\n              {menu}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  </>\n)\n\nconst menus = [\n  <Link to=\"/blog\">Blog</Link>,\n  <a href=\"https://www.programsism.com\">Programsism</a>,\n]\n\nexport default Navigation\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Seo from \"../components/seo\"\nimport Navigation from \"../components/Navigation\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const { previous, next } = data\n\n  return (\n    <>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <Navigation \n      title=\"Blog\"\n      />\n      <article\n      className=\"uk-container\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["menus","React","Link","to","href","title","className","style","marginLeft","map","menu","index","id","data","post","location","markdownRemark","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}