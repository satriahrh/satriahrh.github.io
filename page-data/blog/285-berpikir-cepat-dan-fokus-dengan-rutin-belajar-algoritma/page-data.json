{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blog/285-berpikir-cepat-dan-fokus-dengan-rutin-belajar-algoritma/",
    "result": {"data":{"site":{"siteMetadata":{"title":"satriahrh"}},"markdownRemark":{"id":"6141ce5f-60e9-5b0b-966c-f3284fdeb35e","excerpt":"Seberapa cepat kamu menyelesaikan tugas mu? Sehari? Setengah hari? Wow! Kamu hebat! Mudah bagi kita untuk mengerjakan sebuah tugas dalam sekali duduk, fokusâ€¦","html":"<p>Seberapa cepat kamu menyelesaikan tugas mu? Sehari? Setengah hari? Wow! Kamu hebat!</p>\n<p>Mudah bagi kita untuk mengerjakan sebuah tugas dalam sekali duduk, fokus tanpa diganggu dengan segala kebutuhan yang sudah jelas. Tentu, kita mendapatkan <em>privilege</em> ini ketika pertama kali bekerja sebagai Software Engineer yang masih junior dan dibimbing oleh lead yang sangat baik hati.</p>\n<p>Makin ke sini, aku tidak pernah mendapatkan kesempatan seperti itu. <em>Requirement</em> makin tidak jelas, <em>meeting</em> semakin banyak bahkan dadakan, hingga <em>code review</em> yang belum sempat dilakukan. Akhirnya pekerjaan utama kita untuk <em>ngoding</em> making terbengkalai, senioritas kita makin dipertanyakan.</p>\n<p>Menariknya, paling sering adalah kita tidak pernah bisa berbuat apa apa tentang hal ini. Mengusahakan hal tersebut tidak akan mengantarkan kita kemana-mana, karena semakin senior kita maka semakin banyak orang yang tertarik dengan kita.</p>\n<h2>Cepat vs Fokus</h2>\n<p>Ada beberapa arti cepat dan fokus dalam kbbi: <a href=\"https://kbbi.kemdikbud.go.id/entri/cepat\">cepat</a> dan <a href=\"https://kbbi.kemdikbud.go.id/entri/fokus\">fokus</a>. Di sini, aku akan memakai cukup salah satu saja.</p>\n<pre><code>&#x3C;pre class=\"wp-block-verse\">ce.pat\nadjektiva: dalam waktu singkat; lekas; segera: siapa -- dia dapat siapa yang lekas-lekas datang akan mendapat; penyakitnya -- baik\n</code></pre>\n<pre><code>&#x3C;pre class=\"wp-block-verse\">fo.kus\nverba: memusatkan perhatian: --! jangan lengah\n</code></pre>\n<h2>Cepat ketika tidak memiliki banyak waktu</h2>\n<p>Mengerjakan sesuatu dalam waktu singkat adalah sesuatu yang paling kita butuhkan ketika kita sudah tidak memiliki kebebasan waktu. Satu hari adalah waktu yang lama untuk ngoding ketika kita masih junior, satu jam untuk ngoding adalah waktu yang lama bagi seorang senior.</p>\n<p>Umumnya, mengerjakan sesuatu dengan cepat tidak memberikan hasil yang terbaik, bahkan cukup. Jangan heran ketika kamu nge-<code>git blame</code> dan menemui senior kamu melakukan sesuatu dengan buruk.</p>\n<p>Solusinya jelas, terbiasa mengerjakan sesuatu dalam waktu yang singkat. Belajar algoritma, mengerjakan soal <em>competitive programming</em> adalah salah satu cara yang aku rekomendasikan selain manfaat lain yang kita dapatkan.</p>\n<p>Kita tidak ingin mengerjakan soal anekdot itu berjam-jam hingga berhari-hari. Harapannya, kita harus bisa menemukan solusi paling baik dalam waktu kurang dari satu jam sesuai kemampuan kita. Semakin sering kita melakukannya, tingkat kesusahan soal makin bertambah dan kita makin terbiasa mengerjakan <em>coding</em> susah dalam waktu yang singkat.</p>\n<h2>Fokus satu hal di tengah banyaknya masalah</h2>\n<p>Aku tidak ingin berbicara banyak di sini tentang <em>multitasking</em> (mengerjakan beberapa pekerjaan dalam satu waktu yang bersamaan). Ada <a href=\"https://www.alodokter.com/ini-buktinya-multitasking-tidak-efisien-dan-mengganggu-kesehatan\">artikel kesehatan dari alodokter</a> yang lebih berkompeten membahas masalah ini.</p>\n<p>Semakin lama berkarir Software Engineer, kamu tidak lagi disuapi oleh atasan kamu untuk melakukan suatu pekerjaan. Kamu harus memberikan solusi atas masalah yang ada bahkan mencari masalah-masalah tersebut sendiri. Di saat itu, juga membutuhkan fokus untuk mengerjakan sebuah pekerjaan / fitur.</p>\n<p>Seorang senior Software Engineer yang buruk, dia akan selalu terbuka ketika sedang bekerja. Merespon cepat sebuah chat dan mau diajak diskusi saat itu di kala dia sedang fokus mengerjakan sesuatu. Aku tidak yakin ini adalah hal yang bagus karena di kesempatan selanjutnya dia mungkin harus mengulangi dari awal apa yang sebelumnya dia kerjakan.</p>\n<p>Tentu, belajar algoritma atau mengerjakan soal <em>competitive programming</em> sangat membantu di sini. Kamu tidak mungkin mengerjakan soal tersebut ketika sedang nongkrong di <em>cafe</em> bersama teman bukan? Yaa, kecuali mereka juga melakukan hal yang sama denganmu.</p>\n<p>Mengerjakan soal soal tersebut mau tidak mau menuntut fokus yang tinggi. Ibaratnya, menengok panggilan saja membuat kita lupas baris terakhir kita mengetikkan kode.</p>\n<p>Hasilnya, terbiasa untuk fokus mengerjakan masalah yang susah membantu kita dalam mengerjakan pekerjaan sehari-hari.</p>\n<h2>Cepat dan Fokus</h2>\n<p>Mengerjakan sesuatu dengan fokus yang tinggi dalam waktu yang singkat. Satu fitur selesai dalam waktu kurang dari satu jam tentu bukan mustahil lagi.</p>\n<p>Kita mungkin tidak perlu lagi susah payah mencari <em>productivity hack</em>, semua yang kita butuhkan ternyata sudah ada sejak awal dan sangat relevan dengan pekerjaan kita.</p>\n<h2>Apa Selanjutnya?</h2>\n<p>Cepat dan fokus yang dibahas di sini dalam konteks <em>software engineering</em>. Dalam hal lain seperti manajemen mungkin agak sedikit berbeda, tentu kita tidak bisa memaksa seorang product manager yang miliki masalah kecepatan dan fokus untuk kita minta dia mengerjakan soal soal algoritma <em>competitive programming</em>.</p>\n<p>Cepat dan fokus juga merupakan salah satu manfaat yang bisa kita dapatkan dalam belajar mengerjakan soal algoritma dan <em>competitive programming</em>. Di sini, kita mendapati hal tersebut sangat relevan dalam pekerjaan sehari-hari kita.</p>\n<p>Jika kamu penasaran dengan <a href=\"https://satriahrh.com/blog/282-alasan-masih-harus-rutin-belajar-algoritma/\">manfaat lain dari belajar algoritma dan <em>competitive programming</em></a>, kamu mungkin tertarik untuk membaca artikel sebelumnya.</p>\n<p>Kamu mungkin memiliki ide atau pendapat lain, jangan lupa tinggalkan komentar.</p>","frontmatter":{"title":"Berpikir Cepat dan Fokus dengan Rutin Belajar Algoritma","date":"January 11, 2022","description":null}},"previous":{"fields":{"slug":"/blog/282-alasan-masih-harus-rutin-belajar-algoritma/"},"frontmatter":{"title":"Alasan Masih Harus Rutin Belajar Algoritma"}},"next":{"fields":{"slug":"/blog/308-dont-reinvent-the-wheel-algoritma/"},"frontmatter":{"title":"Don't Reinvent The Wheel: Algoritma"}}},"pageContext":{"id":"6141ce5f-60e9-5b0b-966c-f3284fdeb35e","previousPostId":"12291512-7755-5d12-975e-610ba9ac618e","nextPostId":"7ff81bf9-56ba-5971-9445-336e42b85335"}},
    "staticQueryHashes": ["2841359383"]}