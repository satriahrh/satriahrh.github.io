{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blog/308-dont-reinvent-the-wheel-algoritma/",
    "result": {"data":{"site":{"siteMetadata":{"title":"satriahrh"}},"markdownRemark":{"id":"7ff81bf9-56ba-5971-9445-336e42b85335","excerpt":"Sudah sewajarnya seorang Software Engineer dituntut untuk memberikan solusi atas sebuah masalah atau kebutuhan. Cara untuk memperolehnya adalah dengan berpikirâ€¦","html":"<p>Sudah sewajarnya seorang Software Engineer dituntut untuk memberikan solusi atas sebuah masalah atau kebutuhan. Cara untuk memperolehnya adalah dengan berpikir. Terkadang, kita terlalu berpikir terlalu banyak hingga berpikir membuat sebuah solusi yang sudah ada barangnya di luar sana.</p>\n<p>Di <a href=\"https://dictionary.cambridge.org/dictionary/english/reinvent-the-wheel\">bahasa inggris</a>, kita memiliki idiom untuk kejadian seperti ini</p>\n<pre><code>&#x3C;pre class=\"wp-block-verse\">reinvent the wheel\nto waste time trying to create something that someone else has already created\nto waste time learning how to do something when it is already known how to do it:\n</code></pre>\n<p>Di profesi Software Engineer, <em>reinvent the wheel</em> sering terjadi pada kita bahkan tidak pernah kita sadari. Jujur saja, aku pernah memikirkan sebuah solusi yang keren sekali. Sebulan kemudian solusi yang sama aku jelaskan ke tim ternyata sudah banyak beredar di Medium T_T</p>\n<p>Bisa kita katakan kejadian <em>reinvent the wheel</em> disebabkan sempitnya pengetahuan yang kita miliki, sehingga solusi umum yang ada di luar sana tidak pernah kita ketahui.</p>\n<h2>Removes Duplicated Item in Arrays</h2>\n<p>Familiar dengan masalah ini?</p>\n<p>Diketahui sebuah array, kita diminta untuk membersihkan elemen dengan nilai yang sama sehingga array tersebut memiliki elemen yang unik satu sama lain.</p>\n<p>Contohnya array <code>A=[1,2,3,4,1]</code>, maka balikannya adalah <code>R=[1,2,3,4]</code>, yang mana kita meghilangkan salah satu elemen <code>1</code>.</p>\n<p>Aku yakin teman-teman pernah menemui kasus seperti ini di tempat kerja, aku tidak mengada-ada bahwa kami pernah mengalami kasus ini dan menyelesaikannya dengan cara yang menyedihkan.</p>\n<pre><code>&#x3C;pre class=\"wp-block-code\">```\nR = []\nfor i = 0; i &#x3C; A.length(); i++ {\n  isDuplicated = false\n  for j := 0; j &#x3C; R.length(); j++ {\n    if A[i] == R[j] {\n      isDuplicated = true\n      break\n    }\n  }\n  if !isDuplicated {\n    R.add(A[i])\n  }\n}\n</code></pre>\n<pre><code>\nIntinya, solusi tersebut bukan solusi yang baik. Jika kita cukup familiar dengan dynamic programming, kita bisa memanfaatkan sebuah *dictionary* atau *map* atau *cache* untuk mendeteksi elemen yang pernah muncul.\n\nPractice Makes Perfect\n----------------------\n\nSudah sering dengar? Semakin banyak berlatih semakin sempurna kemampuan dan keahlian yang kita miliki. Keahlian yang paling sering diperlukan bagi seorang Software Engineer adalah coding sebuah solusi atas sebuah masalah.\n\nMenurut penelitian, sebenarnya latihan rata-rata hanya berkontribusi [12% dari sebuah kesempurnaan](https://www.verywellmind.com/does-practice-really-make-perfect-2795158). Jangan salah, hal ini disebabkan adanya faktor lain yang juga mendukung sebuah kesempurnaan keahlian, yang mana sesuatu yang tidak bisa benar-benar kita ubah: kepintaran, lama belajar, kapasitas memori, bakat.\n\nSering latihan juga membentuk mental seorang yang terbiasa berlatih, sehingga ketika kemampuan tersebut dibutuhkan kita akan lebih mudah untuk mengerjakan.\n\nKarena sering berlatih, kita tidak perlu lagi berpikir dari nol, tidak perlu *reinvent the wheel*. Nyatanya, solusi algoritma sudah ada di luar sana. Tugas kita ketika di medan perang adalah mengingat kembali apa yang biasa kita lakukan ketika menemui masalah tersebut.\n\nSelamat Berlatih\n----------------\n\nKetika kita sedang dibutuhkan untuk membuat sebuah algoritma menyelesaikan masalah tertentu, kita tidak perlu lagi berpikir keras untuk menemukan sebuah solusi yang solusi tersebut ternyata sudah umum.\n\nAku pribadi mempunyai beberapa opsi untuk latihan algoritma ini: LeetCode dan proyek pribadi.\n\nLeetCode atau semacamnya adalah sebuah platform untuk melatih algoritma kita. Ada ribuan soal yang bisa kita selesaikan dan tersedia soal soal baru juga. Mereka juga mempunyai serial materi yang membantu kita mempelajari hal hal mendasar.\n\nProyek pribadi mungkin juga kamu butuhkan untuk mengasah kemampuan mengerjakan masalah *real*. Terkadang, mengerjakan soal di LeetCode kurang berasa relevan dengan pekerjaan kita karena soanya yang cukup abstrak.\n</code></pre>","frontmatter":{"title":"Don't Reinvent The Wheel: Algoritma","date":"January 19, 2022","description":null}},"previous":{"fields":{"slug":"/blog/285-berpikir-cepat-dan-fokus-dengan-rutin-belajar-algoritma/"},"frontmatter":{"title":"Berpikir Cepat dan Fokus dengan Rutin Belajar Algoritma"}},"next":{"fields":{"slug":"/blog/280-mengetahui-peran-dari-role-lain-di-tim/"},"frontmatter":{"title":"Mengetahui Peran dari Role Lain di Tim"}}},"pageContext":{"id":"7ff81bf9-56ba-5971-9445-336e42b85335","previousPostId":"6141ce5f-60e9-5b0b-966c-f3284fdeb35e","nextPostId":"ab75a581-efad-5ea0-a5ac-65962d210016"}},
    "staticQueryHashes": ["2841359383"]}