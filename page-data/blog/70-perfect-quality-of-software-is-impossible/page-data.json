{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blog/70-perfect-quality-of-software-is-impossible/",
    "result": {"data":{"site":{"siteMetadata":{"title":"satriahrh"}},"markdownRemark":{"id":"383fde72-9905-5be6-a2e3-ea465df317f6","excerpt":"I just got a chance to take a course on Engineering Practices for Building Quality Software. I have just started the course. The introduction is very intriguing…","html":"<p>I just got a chance to take a course on <a href=\"https://www.coursera.org/learn/engineering-practices-secure-software-quality\">Engineering Practices for Building Quality Software</a>. I have just started the course. The introduction is very intriguing. So far, I am fully aware that we should have to build high-quality software.</p>\n<p>The first module begins with leveraging what is software, what is quality, what is good design. Most importantly, it tells us what the quality of software really means.</p>\n<p>I have just stumbled upon a section, where it asks me to read material about <a href=\"https://docs.microsoft.com/en-us/previous-versions/msp-n-p/ee658094(v=pandp.10)\">Quality Attributes</a> in software. At first glance, the numerous items of attributes are very intimidating. I just don’t accept the way the course asks you to memorize all of it. Even though the material tried to give a brief definition of each attribute in the form of a table, those number of items is still scary.</p>\n<p>I was believing at the moment that I will be having through them all and memorized all of it. After reading through few attributes, I just began to realize an astonishing fact.</p>\n<p>Those quality attributes are very common to me. Then I began to recall all of the moment I spend doing some of my software projects, it was when I consider the quality attributes to be missing or to be fully implemented in my software.</p>\n<p>All these years I spend developing software, I get it all wrong. <strong>Not all of those quality attributes shall be fully satisfied.</strong> I have some reason for it:</p>\n<ol>\n<li>It cost more effort</li>\n<li>Pragmatism</li>\n</ol>\n<h2>It Cost an Effort to Satisfy a Quality Attribute</h2>\n<p>The software I was working with at the moment is a cardless installment account application. It is like a credit account without a card, mostly you only can use it through their online marketplace or several merchants.</p>\n<p>A customer will be filling an application form, they fill in a personal information form along with another required form. It is our job to send the application form data from the customer to the creditor, and report the application status to the customer from the creditor.</p>\n<p>It is very troublesome just to make sure the data is synced, between our data warehouse and creditor warehouse, resulting in unsynced application status.</p>\n<p>Almost every day, there will be a customer applying through our service, and the application status is not synced. When we don’t have an operation dashboard to force update the application status on to our database, it is the engineer’s job to perform the manual updates directly onto the database.</p>\n<p>Having operation tasks on the engineering side is very costly, simply by understanding that our salary surely paid multiple times more compared to the guy in operational.</p>\n<p>We who felt it was so troublesome doing operational tasks, then proposing to build an operation dashboard to ease application status force update. <strong>But remember, working on a feature is also needs effort</strong>. Because the dashboard won’t come in a snap like what Thanos did.</p>\n<h2>Pragmatism</h2>\n<p>Do you know the response from the product team to our proposal? “That was a brilliant solution to all of these messes, but we won’t be doing it for now. We need to deliver another product.” Although that was not redactional accurate, I can say the meaning is similar.</p>\n<p>It is not us who paid for our self doing engineering tasks, coding, architecting, etc. It is them who paid our monthly salary, raise our salary, give us benefits. Interpreted by our fellow in product and manager, they have more understanding of what is really happening to our company.</p>\n<p>Maybe our investors are very demanding of the newest project we will be working on. Maybe our company is pursuing a high revenue for next quarter. Maybe other things we don’t know, or we shouldn’t know. The thing is that we are paid to help the business achieve the company target.</p>\n<p>Come to realize, IT and engineer department is primary a supporter department compared to any other. Things may be different when you are working on a software house, commonly it is the way it is. In my opinion, pragmatism frequently is what makes our software don’t achieve those all quality attributes perfectly.</p>\n<hr>\n<p>Some of the company might be very strict of the software quality, even the engineering department of our company urging to build a high quality of software by campaigning “engineer owns the quality of the software”.</p>\n<p>Things will be different when you are in a company that on business, even on a nonprofit company.</p>\n<p>The best thing engineer can do is, prioritizing which quality attributes have a higher priority to achieving. That will be my final words.</p>","frontmatter":{"title":"Perfect Quality of Software is Impossible","date":"February 02, 2021","description":null}},"previous":{"fields":{"slug":"/blog/62-acing-your-first-on-call-schedule-clear-report-on-every-second/"},"frontmatter":{"title":"Acing Your First On Call Schedule: Clear Report on Every Second"}},"next":{"fields":{"slug":"/blog/67-error-handling-in-go-neat-and-clean-way/"},"frontmatter":{"title":"Error Handling in Go: Neat and Clean Way"}}},"pageContext":{"id":"383fde72-9905-5be6-a2e3-ea465df317f6","previousPostId":"4b9f08c1-c72c-53a5-bbb9-074cdb624698","nextPostId":"9cdc062e-c73f-553a-8122-f76998a0e73d"}},
    "staticQueryHashes": ["2841359383"]}